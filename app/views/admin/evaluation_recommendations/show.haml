%h4 Recommendation Breakdown
%p
  #{@recommendation.gift.title} (#{number_with_precision(@recommendation.score, precision: 2)})
  %br
  #{@recommendation.survey_response.name}

%table.table.table-striped
  %thead
    %tr
      %th{colspan: 2} Impact
      %th Question/Response
  %tbody
    - @question_ranks.sort{|a, b| b.score.abs <=> a.score.abs}.each do |question_rank|
      %tr
        %td
          - if question_rank.score > 0.0
            %i.text-success.glyphicon.glyphicon-arrow-up
          - else
            %i.text-danger.glyphicon.glyphicon-arrow-down
        %td.text-right= number_with_precision(question_rank.score, precision: 2)
        %td
          = question_rank.question.prompt
          %strong (#{displayable_response(question_rank.response)})
          %div.text-muted
            %i impact
            = "="
            - if question_rank.score < 0.0
              #{Recommendations::Engine::NEGATIVE_RANK_PENALTY}
              &times;
            #{Recommendations::Engine::QUESTION_WEIGHT_BASE}
            %sup #{number_with_precision(question_rank.impact.question_impact.abs, precision: 2)}
            - response_weights = []
            - if question_rank.question.is_a?(SurveyQuestions::MultipleChoice)
              :ruby
                question_rank.response.survey_question_options.each do |option|
                  question_rank.impact.response_impacts.each do |impact|
                    if impact.survey_question_option_id == option.id
                      response_weights << impact.impact
                    end
                  end
                end
            - elsif question_rank.question.is_a?(SurveyQuestions::Range)
              - modifier = question_rank.impact.range_impact_direct_correlation? ? 1 : -1
              - response_weights << modifier * question_rank.response.range_response
              
            - if response_weights.any?
              &times; 
              - if response_weights.many?
                (
              #{response_weights.map{|w| number_with_precision(w, precision: 2)}.join(' + ')}
              - if response_weights.many?
                )
