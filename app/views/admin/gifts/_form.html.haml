= simple_form_for( [:admin, @gift], html: {data: {behavior: 'form-loads-subcategories'}}) do |f|
  = f.error_notification message: @error_message

  .form-inputs
    = f.input :title
    = f.input :description
    = f.input :tax_code_id, collection: @tax_codes, label_method: :name, value_method: :id
    = f.input :tag_list, label: "Tags", hint: "List tags names separated with a comma (ex: not_for_wife, outdoorsy, sophisticated)", as: :text
    .row
      .col-xs-3
        = f.input :selling_price, wrapper: :vertical_input_group, label: 'Selling Price' do
          .input-group-addon $
          -# FIXME: use javascript to toggle disabled based on the checkbox for auto-calculation
          -#= f.input_field :selling_price, class: 'form-control', disabled: @gift.calculate_price_from_products?, value: number_with_precision(f.object.selling_price, precision: 2)
          = f.input_field :selling_price, class: 'form-control', value: number_with_precision(f.object.selling_price, precision: 2)
        = f.input :calculate_price_from_products, label: 'Auto-Calculate Price from Products'

        = f.input :insurance_in_dollars, wrapper: :vertical_input_group, label: 'Insurance to buy when shipping' do
          .input-group-addon $
          = f.input_field :insurance_in_dollars, class: 'form-control', value: number_with_precision(f.object.insurance_in_dollars, precision: 2)

        = f.input :cost, wrapper: :vertical_input_group do
          .input-group-addon $
          -#= f.input_field :cost, class: 'form-control', disabled: @gift.calculate_cost_from_products?, value: number_with_precision(f.object.cost, precision: 2)
          = f.input_field :cost, class: 'form-control', value: number_with_precision(f.object.cost, precision: 2)
        = f.input :calculate_cost_from_products, label: 'Auto-Calculate Cost from Products'

        = f.input :weight_in_pounds, wrapper: :vertical_input_group do
          .input-group-addon lb
          -#= f.input_field :weight_in_pounds, class: 'form-control', disabled: @gift.calculate_weight_from_products?, value: number_with_precision(f.object.weight_in_pounds, precision: 2)
          = f.input_field :weight_in_pounds, class: 'form-control', value: number_with_precision(f.object.weight_in_pounds, precision: 2)
        = f.input :calculate_weight_from_products, label: 'Auto-Calculate Weight from Products'

        %h3 Category
        = f.association :product_category, as: :select, collection: ProductCategory.categories, input_html: {data: {behavior: 'product-category-input'}}
        = f.association :product_subcategory, as: :select, collection: (@gift.product_category&.children || []), input_html: {data: {behavior: 'product-subcategory-input'}}
        = f.input :wrapt_sku, label: 'Wrapt SKU', disabled: true

        = f.fields_for :pretty_parcels do |gp|
          = gp.input :id, as: :hidden
          = gp.input :parcel_id, collection: Ec::Parcel.active.pretty.all, value_method: :id, label_method: :description, input_html: {}, label: 'Gift Box'
          = gp.input :gift_id, as: :hidden, value: @gift.id

        = f.fields_for :shipping_parcels do |gp|
          = gp.input :id, as: :hidden
          = gp.input :parcel_id, collection: Ec::Parcel.active.shipping.all, value_method: :id, label_method: :description, input_html: {}, label: 'Shipping Box'
          = gp.input :gift_id, as: :hidden, value: @gift.id

    = f.input :available, label: 'Available to Customers'
    = f.input :featured, label: 'Promote this gift in the recommendations'

  .form-actions
    = f.button :submit, 'Save', class: 'btn btn-primary'

:javascript
  new App.Admin.ProductSubcategoryLoader()
