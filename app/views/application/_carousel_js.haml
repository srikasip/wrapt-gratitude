:coffeescript
  # include carousel_helper in controller

  class Carousel
    constructor: (@carousel) ->
      @slides_container = '.' + $(@carousel).data('slides-container')
      @slide_container = '.' + $(@carousel).data('slide-container')
      @nav_selector = '.' + $(@carousel).data('nav')
      @indicator_container = '.' + $(@carousel).data('indicator-container')
      @small_nav_scroll_selector = '.' + $(@carousel).data('small-nav')
      @small_nav_text_selector = '.' + $(@carousel).data('small-nav-text')

      @performResize = null
      
      @_load_slides()

    _load_slides: ->
      @container = $(@carousel).find(@slides_container)
      @slides = $(@carousel).find(@slide_container)
      @max = @slides.length

      @_set_height()
      @_init_slides(true)

      @_load_nav()
      @_init_nav()

      @_init()

    _init_slides: (first_time)->
      @slides.each (i, slide) =>
        if i == 0 && first_time
          $(slide).addClass('active')
        $(slide).css('position', 'absolute')
        $(slide).css('top', '0px')
        $(slide).css('bottom', '0px')
        $(slide).css('left', '0px')
        unless $(slide).hasClass('active')
          $(slide).addClass('hidden')

    _reset_slides: ->
      @slides.each (i, slide) =>
        $(slide).removeAttr('style')

    _load_nav: ->
      @nav_next = $(@carousel).find(@nav_selector + '.next')
      @nav_prev = $(@carousel).find(@nav_selector + '.prev')
      @indicators = $(@carousel).find(@indicator_container)
      $(@indicators.first()).addClass('active')

    _init_nav: ->
      @clickable = true
      @_nav_click_handler(@nav_next, 'slideOutLeft', 'slideInLeft')
      @_nav_click_handler(@nav_prev, 'slideOutRight', 'slideInRight')
      @_indicator_click_handler()

    _load_active: ->
      @active = $(@carousel).find(@slide_container + ".active")

    _load_next: ->
      @_load_active()
      active_position = $(@active).data('position')
      next_position = parseInt(active_position, 10) + 1
      if next_position > @max
        @next = $(@carousel).find(@slide_container + "[data-position='1']")
      else
        @next = $(@carousel).find(@slide_container + "[data-position='" + next_position + "']")

    _load_prev: ->
      @_load_active()
      active_position = $(@active).data('position')
      prev_position = parseInt(active_position, 10) - 1
      if prev_position < 1
        @next = $(@carousel).find(@slide_container + "[data-position='" + @max + "']")
      else
        @next = $(@carousel).find(@slide_container + "[data-position='" + prev_position + "']") 

    _update_small_indicator_text: (text) ->
      $(@small_nav_text_selector).text(text)

    _nav_click_handler: (element, directionClassOut, directionClassIn) ->
      $(element).click (e) =>
        e.preventDefault()
        if @clickable
          @clickable = false
          if $(element).hasClass('next')
            @_load_next()
            
          else
            @_load_prev()
          
          @_slide(directionClassOut, directionClassIn)
          

    _indicator_click_handler: ->
      @indicators.each (i, indicator) =>
        $(indicator).click (e) =>
          e.preventDefault()
          if @clickable
            @_load_active()
            indicator_position = $(indicator).data('position')
            active_position = $(@active).data('position')
            unless indicator_position == active_position
              @clickable = false
              @next = $(@carousel).find(@slide_container + "[data-position='" + indicator_position + "']")
              if indicator_position > active_position
                directionClassOut = 'slideOutLeft'
                directionClassIn = 'slideInLeft'
              else
                directionClassOut = 'slideOutRight'
                directionClassIn = 'slideInRight'
              @_slide(directionClassOut, directionClassIn)

    _update_indicators: ->
      @indicators.each (i, indicator) =>
        $(indicator).removeClass('active')
      active_position = $(@next).data('position')
      $(@carousel).find(@indicator_container + '[data-position="' + active_position + '"]').addClass('active')

    _slide: (directionClassOut, directionClassIn) ->
      @_reset_zoom(@next)
      @_slide_out(directionClassOut)
      @_slide_in(directionClassIn)


    _slide_out: (directionClass) ->
      $(@active).addClass(directionClass)
      $(@active).one 'webkitAnimationEnd oanimationend msAnimationEnd animationend', (e) =>
        @_after_slide_out(directionClass)

    _after_slide_out: (classToRemove) ->
      $(@active).addClass('hidden')
      $(@active).removeClass('active')
      $(@active).removeClass(classToRemove)

    _slide_in: (directionClass) ->
      $(@next).addClass(directionClass)
      $(@next).addClass('active')
      $(@next).removeClass('hidden')
      $(@next).one 'webkitAnimationEnd oanimationend msAnimationEnd animationend', (e) =>
        @_after_slide_in(directionClass)

    _after_slide_in: (classToRemove) ->
      $(@next).removeClass(classToRemove)
      @clickable = true
      @_update_indicators()
      $(@carousel).trigger('slide:change')

    _debounce: (func, wait, immediate) =>
      result = null
      args = null
      timeout = null
      timestamp = null
      context = null
      later = () =>
        last = new Date - timestamp
        if last < wait && last >= 0
          timeout = setTimeout(later, wait - last)
        else 
          timeout = null
          if !immediate
            result = func.apply(context, args)
            if !timeout
              context = args = null
      () =>
        context = this
        args = arguments
        timestamp = new Date
        callNow = immediate && !timeout
        if !timeout
          timeout = setTimeout(later, wait)
        if callNow
          result = func.apply(context, args)
          context = args = null

        result 

    _perform_resize: () ->
      @_reset_slides()
      @_set_height()
      @_init_slides(false)
      if @reset_zoom_on_resize
        @_load_active()
        @_reset_zoom(@active)

    _resize_carousel: () ->
      $(window).resize @_debounce(@_perform_resize, 1000)


    _reset_zoom: (ele)->
      # reset zoom element to active element
      if @zoom_element_selector
        $('.zoomContainer').remove()
        $('.gr-image-carousel__image').removeData('elevateZoom')
        @_set_zoom(ele)

    _set_zoom: (ele)->
      # http://www.elevateweb.co.uk/image-zoom/examples
      if @zoom_element_selector
        ele = ele.find(@zoom_element_selector)
        console.log(ele)
        width = $(window).width()
        if width > 768
          @elevateZoom = $(ele).elevateZoom()
        else
          @elevateZoom = $(ele).elevateZoom({
            zoomType: 'inner'
          })

  class ImageCarousel extends Carousel

    _init: ->
      @_load_active()
      @_set_image_text(@active);
      $(@carousel).on 'slide:change', () =>
        @_set_image_text(@next);
      @_resize_carousel()
      @zoom_element_selector = '.gr-image-carousel__image'

    _set_image_text: (slide) ->
      slideImage = $(slide).find('.gr-image-carousel__image')
      title = slideImage.data('image-title')
      $(@carousel).find('.gr-image-carousel__image-text').text(title)


    _set_height: ->
      # set in parent slider


  class ItemCarousel extends Carousel

    _init: ->
      @_resize_carousel()
      @_small_indicator_scroll_click_handler()
      
      @zoom_element_selector = '.gr-image-carousel__image-container.active .gr-image-carousel__image'
      @reset_zoom_on_resize = true
      @_load_active()
      @_set_zoom(@active)
      

    _load_group_positions: ()->
      total_groups = Math.ceil(@indicators.length/5)
      positions = [1..@indicators.length]
      grouped_positions = []
      for i in [0...total_groups]
        grouped_positions[i] = positions.slice(i*5, (i*5)+5)
      grouped_positions

    _load_group_next: (nav) ->
      direction = if $(nav).hasClass('next') then '.next' else '.prev'
      $(@small_nav_scroll_selector+direction).data('group')

    _update_group_data: (nav, next, current) ->
      grouped_positions = @_load_group_positions()
      prevEle = $(@small_nav_scroll_selector+'.prev')
      nextEle = $(@small_nav_scroll_selector+'.next')
      if $(nav).hasClass('next')
        $(prevEle).data('group', current)
        $(nextEle).data('group', next+1)
      else
        $(prevEle).data('group', current-2)
        $(nextEle).data('group', next+1)
      
      if $(prevEle).data('group') == 0
        $(prevEle).addClass('disabled')
      else
        $(prevEle).removeClass('disabled')
      
      if grouped_positions[$(nextEle).data('group')-1]
        $(nextEle).removeClass('disabled')
      else
        $(nextEle).addClass('disabled')

    _transition_indicators: (next_gp) ->
      $(@indicators).animate {opacity: 0}, 500, =>
        $(@indicators).addClass('hidden-xs')
        $(@indicators).css('opacity', 1)  
        i_to_show = $(@indicators).filter (index) ->
          $.inArray($(this).data('position'), next_gp) != -1
        i_to_show.removeClass('hidden-xs')
        i_to_show.animate {opacity: 1}, 500

    _small_indicator_scroll_click_handler: ->
      @grouped_positions = @_load_group_positions()
      
      $(@small_nav_scroll_selector).each (i, nav) =>
        $(nav).click (e) =>
          e.preventDefault()
          prevEle = $(@small_nav_scroll_selector+'.prev')
          current = prevEle.data('group') + 1
          next = @_load_group_next(nav)
          next_gp = @grouped_positions[next-1]
          @_transition_indicators(next_gp)
          @_update_group_data(nav, next, current)

    _set_height: ->
      @carouselHeight = 520
      @slides.each (i, item) =>
        if $(item).height() > @carouselHeight
          @carouselHeight = $(item).height()
        console.log(@carouselHeight)
      $(@carousel).css('height', @carouselHeight + 'px')
      $(@container).css('height', @carouselHeight + 'px')

      # set image carousel height here too
      image_carousel = $('.gr-image-carousel')
      image_carousel.css('height', image_carousel.parent('.gr-carousel__gift-image').height())

      # Also set the wrapper height so the thumbnail nav
      # gets pushed down below the footer
      width = $(window).width()
      if width > 767
        wrapperHeight = 0
        wrapperHeight += @carouselHeight
        wrapperHeight += (parseInt($('.gr-carousel__indicators').height()) || 0)
        wrapperHeight += (parseInt($('.gr-carousel__indicators').css('margin-top')) || 0)
        $('.wrapt-carousel--wrapper').css('height', wrapperHeight)
      else
        # on mobile we don't need the extra space
        $('.wrapt-carousel--wrapper').css('height', 'auto')
  
  
  class ExampleCarousel extends Carousel

    _init: ->
      @_resize_carousel()

    _set_height: ->
      @carouselHeight = 0
      @slides.each (i, item) =>
        if $(item).height() > @carouselHeight
          @carouselHeight = $(item).height()
      $(@carousel).css('height', @carouselHeight + 'px')
      $(@container).css('height', @carouselHeight + 'px')


  $('.hgec-carousel').each (i, carousel) ->
    new ExampleCarousel(carousel)

  $('.gr-image-carousel').each (i, carousel) ->
    new ImageCarousel(carousel)

  $('.gr-carousel').each (i, carousel) ->
    new ItemCarousel(carousel)
